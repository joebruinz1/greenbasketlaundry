name: Build & Publish (GitHub Pages)

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '*/30 * * * *'   # every 30 minutes (UTC). Change as you like.
  workflow_dispatch:

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Fetch HubSpot posts -> public/posts.json (robust)
        env:
          HUBSPOT_PRIVATE_APP_TOKEN: ${{ secrets.HUBSPOT_PRIVATE_APP_TOKEN }}
          BLOG_BASE: https://hubspot.greenbasketlaundry.com
          HS_LIMIT: '6'
        run: |
          set -Eeuo pipefail
          mkdir -p public
          # Try to build posts.json; if it fails, publish an empty one so site still deploys
          node scripts/fetch_hubspot.mjs || {
            echo "Fetch failed; writing empty JSON so the site still deploys"
            printf '{"count":0,"posts":[]}\n' > public/posts.json
          }
          # Also place a copy at the root so either URL works
          cp public/posts.json posts.json || true

          echo "---- DEBUG: repo root ----"
          ls -la
          echo "---- DEBUG: public/ ----"
          ls -la public || true
          echo "---- DEBUG: posts.json head ----"
          head -c 400 public/posts.json || true
          echo

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
